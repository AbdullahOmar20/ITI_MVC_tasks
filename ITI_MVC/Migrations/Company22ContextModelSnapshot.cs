// <auto-generated />
using System;
using ITI_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_MVC.Migrations
{
    [DbContext(typeof(Company22Context))]
    partial class Company22ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_MVC.Models.Emp_Project", b =>
                {
                    b.Property<int>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<int>("Project_Id")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingHours")
                        .HasColumnType("int");

                    b.HasKey("Emp_Id", "Project_Id");

                    b.HasIndex("Project_Id");

                    b.ToTable("emp_Projs");
                });

            modelBuilder.Entity("ITI_MVC.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Office_Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Office_Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("ITI_MVC.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("office");
                });

            modelBuilder.Entity("ITI_MVC.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("ITI_MVC.Models.Emp_Project", b =>
                {
                    b.HasOne("ITI_MVC.Models.Employee", "employee")
                        .WithMany("emp_Projects")
                        .HasForeignKey("Emp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITI_MVC.Models.Project", "project")
                        .WithMany("emp_Projects")
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("ITI_MVC.Models.Employee", b =>
                {
                    b.HasOne("ITI_MVC.Models.Office", "office")
                        .WithMany("employees")
                        .HasForeignKey("Office_Id");

                    b.Navigation("office");
                });

            modelBuilder.Entity("ITI_MVC.Models.Employee", b =>
                {
                    b.Navigation("emp_Projects");
                });

            modelBuilder.Entity("ITI_MVC.Models.Office", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("ITI_MVC.Models.Project", b =>
                {
                    b.Navigation("emp_Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
